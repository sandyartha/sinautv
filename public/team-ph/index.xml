<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Team MLBB Philippines on SINAUTV</title>
    <link>http://localhost:1313/team-ph/</link>
    <description>Recent content in Team MLBB Philippines on SINAUTV</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/team-ph/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Aurora Gaming vs Team Liquid PH</title>
      <link>http://localhost:1313/team-ph/aurora_gaming_vs_team_liquid_ph/</link>
      <pubDate>Sat, 03 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/aurora_gaming_vs_team_liquid_ph/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/aurora_gaming_vs_team_liquid_ph.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;17&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>ONIC PH vs Omega Esports</title>
      <link>http://localhost:1313/team-ph/omega_esports_vs_onic_ph/</link>
      <pubDate>Sat, 03 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/omega_esports_vs_onic_ph/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/omega_esports_vs_onic_ph.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;57&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>TNC Pro Team vs Team Liquid PH</title>
      <link>http://localhost:1313/team-ph/team_liquid_ph_vs_tnc_pro_team/</link>
      <pubDate>Fri, 02 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/team_liquid_ph_vs_tnc_pro_team/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/team_liquid_ph_vs_tnc_pro_team.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;43&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>AP.Bren vs ONIC PH</title>
      <link>http://localhost:1313/team-ph/ap_bren_vs_onic_ph/</link>
      <pubDate>Sun, 27 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/ap_bren_vs_onic_ph/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/ap_bren_vs_onic_ph.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;64&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Aurora Gaming vs TNC Pro Team</title>
      <link>http://localhost:1313/team-ph/aurora_gaming_vs_tnc_pro_team/</link>
      <pubDate>Sun, 27 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/aurora_gaming_vs_tnc_pro_team/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/aurora_gaming_vs_tnc_pro_team.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;12&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>ONIC PH vs Team Liquid PH</title>
      <link>http://localhost:1313/team-ph/onic_ph_vs_team_liquid_ph/</link>
      <pubDate>Sat, 26 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/onic_ph_vs_team_liquid_ph/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/onic_ph_vs_team_liquid_ph.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;57&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Omega Esports vs Team Liquid PH</title>
      <link>http://localhost:1313/team-ph/omega_esports_vs_team_liquid_ph/</link>
      <pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/omega_esports_vs_team_liquid_ph/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/omega_esports_vs_team_liquid_ph.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;56&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>AP.Bren vs Team Liquid PH</title>
      <link>http://localhost:1313/team-ph/ap_bren_vs_team_liquid_ph/</link>
      <pubDate>Sat, 05 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/ap_bren_vs_team_liquid_ph/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/ap_bren_vs_team_liquid_ph.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;90&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Omega Esports vs TNC Pro Team</title>
      <link>http://localhost:1313/team-ph/omega_esports_vs_tnc_pro_team/</link>
      <pubDate>Sat, 05 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/omega_esports_vs_tnc_pro_team/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/omega_esports_vs_tnc_pro_team.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;48&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>AP.Bren vs Aurora Gaming</title>
      <link>http://localhost:1313/team-ph/ap_bren_vs_aurora_gaming/</link>
      <pubDate>Fri, 04 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/ap_bren_vs_aurora_gaming/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/ap_bren_vs_aurora_gaming.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;19&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>AP.Bren vs TNC Pro Team</title>
      <link>http://localhost:1313/team-ph/ap_bren_vs_tnc_pro_team/</link>
      <pubDate>Sat, 29 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/ap_bren_vs_tnc_pro_team/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/ap_bren_vs_tnc_pro_team.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;36&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>ONIC PH vs TNC Pro Team</title>
      <link>http://localhost:1313/team-ph/onic_ph_vs_tnc_pro_team/</link>
      <pubDate>Fri, 28 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/onic_ph_vs_tnc_pro_team/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/onic_ph_vs_tnc_pro_team.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;34&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Blacklist Intl vs ONIC PH</title>
      <link>http://localhost:1313/team-ph/blacklist_intl_vs_onic_ph/</link>
      <pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/blacklist_intl_vs_onic_ph/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/blacklist_intl_vs_onic_ph.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;65&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>AP.Bren vs Blacklist Intl</title>
      <link>http://localhost:1313/team-ph/ap_bren_vs_blacklist_intl/</link>
      <pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/ap_bren_vs_blacklist_intl/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/ap_bren_vs_blacklist_intl.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;74&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Blacklist Intl vs Omega Esports</title>
      <link>http://localhost:1313/team-ph/blacklist_intl_vs_omega_esports/</link>
      <pubDate>Wed, 16 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/blacklist_intl_vs_omega_esports/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/blacklist_intl_vs_omega_esports.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;62&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Aurora Gaming vs RSG PH</title>
      <link>http://localhost:1313/team-ph/aurora_gaming_vs_rsg_ph/</link>
      <pubDate>Sat, 05 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/aurora_gaming_vs_rsg_ph/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/aurora_gaming_vs_rsg_ph.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;4&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Blacklist Intl vs TNC Pro Team</title>
      <link>http://localhost:1313/team-ph/blacklist_intl_vs_tnc_pro_team/</link>
      <pubDate>Sun, 29 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/blacklist_intl_vs_tnc_pro_team/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/blacklist_intl_vs_tnc_pro_team.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;36&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>ONIC PH vs RSG PH</title>
      <link>http://localhost:1313/team-ph/onic_ph_vs_rsg_ph/</link>
      <pubDate>Sun, 29 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/onic_ph_vs_rsg_ph/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/onic_ph_vs_rsg_ph.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;47&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>RSG PH vs Team Liquid PH</title>
      <link>http://localhost:1313/team-ph/rsg_ph_vs_team_liquid_ph/</link>
      <pubDate>Fri, 27 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/rsg_ph_vs_team_liquid_ph/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/rsg_ph_vs_team_liquid_ph.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;73&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>AP.Bren vs RSG PH</title>
      <link>http://localhost:1313/team-ph/ap_bren_vs_rsg_ph/</link>
      <pubDate>Sun, 22 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/ap_bren_vs_rsg_ph/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/ap_bren_vs_rsg_ph.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;54&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Blacklist Intl vs RSG PH</title>
      <link>http://localhost:1313/team-ph/blacklist_intl_vs_rsg_ph/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/blacklist_intl_vs_rsg_ph/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/blacklist_intl_vs_rsg_ph.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;45&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Blacklist Intl vs Team Liquid PH</title>
      <link>http://localhost:1313/team-ph/blacklist_intl_vs_team_liquid_ph/</link>
      <pubDate>Sat, 04 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/team-ph/blacklist_intl_vs_team_liquid_ph/</guid>
      <description>&lt;div id=&#34;chartContainer&#34;&gt;&#xD;&#xA;  &lt;div id=&#34;chartdiv&#34; style=&#34;min-width: 100%;min-height:30rem;display:flex;&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div id=&#34;leagueDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;yearDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;  &lt;div id=&#34;scoreDiv&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;&#xD;&#xA;am4core.addLicense(&#34;ch-custom-attribution&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;var link = document.createElement(&#34;link&#34;);&#xD;&#xA;link.href =&#xD;&#xA;  &#34;https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&amp;display=swap&#34;;&#xD;&#xA;link.rel = &#34;stylesheet&#34;;&#xD;&#xA;document.head.appendChild(link);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const jsonFile = &#34;\/team-ph\/blacklist_intl_vs_team_liquid_ph.json&#34;; &#xD;&#xA;&#xD;&#xA;fetch(jsonFile)&#xD;&#xA;  .then((response) =&gt; response.json())&#xD;&#xA;  .then((allData) =&gt; {&#xD;&#xA;    var dateKeys = Object.keys(allData); &#xD;&#xA;    var currentIndex = 0; &#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function updateChart() {&#xD;&#xA;      if (currentIndex &lt; dateKeys.length) {&#xD;&#xA;        var gameKey = dateKeys[currentIndex]; &#xD;&#xA;        var gameData = allData[gameKey]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        var teams = gameData.slice(0, 2); &#xD;&#xA;        var metadata = gameData[2]; &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        chart.data = teams.map((team) =&gt; ({&#xD;&#xA;          short_name: team.short_name,&#xD;&#xA;          poin: team.poin,&#xD;&#xA;          score: team.score,&#xD;&#xA;          league: metadata.league,&#xD;&#xA;          clubs: metadata.clubs,&#xD;&#xA;        }));&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        year = metadata.date;&#xD;&#xA;        label.text = year;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;        leagueLabel.text = metadata.league;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = metadata.league;&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[0].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[0].short_name}&#xD;&#xA;          &lt;/span&gt; &#xD;&#xA;          ${teams[0].score}:${teams[1].score} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[teams[1].short_name]?.color || &#34;#000&#34;};&#34;&gt;&#xD;&#xA;            ${teams[1].short_name}&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;        scoreLabel.html = scores;&#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Updating to&#34;, gameKey, chart.data);&#xD;&#xA;&#xD;&#xA;        currentIndex++;&#xD;&#xA;      } else {&#xD;&#xA;        clearInterval(interval);&#xD;&#xA;        console.log(&#34;Animation completed&#34;);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    am4core.ready(function () {&#xD;&#xA;      &#xD;&#xA;      am4core.useTheme(am4themes_animated);&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      var chart = am4core.create(&#34;chartdiv&#34;, am4charts.XYChart); &#xD;&#xA;      chart.padding(40, 40, 40, 40); &#xD;&#xA;      chart.svgContainer.width = 1080; &#xD;&#xA;      chart.svgContainer.height = 720; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.fontFamily = &#34;Roboto Mono&#34;;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.background.fill = am4core.color(&#34;rgba(0, 0, 0, 0)&#34;);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.marginTop = 20;&#xD;&#xA;      chart.marginRight = 20;&#xD;&#xA;      chart.marginBottom = 20;&#xD;&#xA;      chart.marginLeft = 20;&#xD;&#xA;&#xD;&#xA;      chart.numberFormatter.bigNumberPrefixes = [{ number: 1e3, suffix: &#34;k&#34; }]; &#xD;&#xA;&#xD;&#xA;      var label = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      label.x = am4core.percent(100);&#xD;&#xA;      label.y = am4core.percent(88);&#xD;&#xA;      label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      label.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      label.dx = -0;&#xD;&#xA;      label.fontSize = 20; &#xD;&#xA;      label.opacity = 0.5; &#xD;&#xA;      label.className = &#34;chart-label&#34;; &#xD;&#xA;      label.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var playButton = chart.plotContainer.createChild(am4core.PlayButton); &#xD;&#xA;      playButton.x = am4core.percent(97);&#xD;&#xA;      playButton.y = am4core.percent(95);&#xD;&#xA;      playButton.dy = -2;&#xD;&#xA;      playButton.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      playButton.disabled = true; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var tags = parseInt(&#34;70&#34;, 10);&#xD;&#xA;&#xD;&#xA;      var totalDuration;&#xD;&#xA;&#xD;&#xA;      if (tags &gt;= 100) {&#xD;&#xA;        totalDuration = 45000; &#xD;&#xA;      } else if (tags &gt;= 60) {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      } else if (tags &gt;= 30) {&#xD;&#xA;        totalDuration = 20000; &#xD;&#xA;      } else if (tags &gt;= 5) {&#xD;&#xA;        totalDuration = 15000; &#xD;&#xA;      } else {&#xD;&#xA;        totalDuration = 30000; &#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var stepDuration = totalDuration / dateKeys.length;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis()); &#xD;&#xA;      categoryAxis.renderer.grid.template.location = 0;&#xD;&#xA;      categoryAxis.dataFields.category = &#34;short_name&#34;;&#xD;&#xA;      categoryAxis.renderer.minGridDistance = 10;&#xD;&#xA;      categoryAxis.renderer.inversed = true;&#xD;&#xA;      categoryAxis.renderer.grid.template.disabled = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.padding(5, 5, 5, 5); &#xD;&#xA;      categoryAxis.renderer.labels.template.marginRight = 0; &#xD;&#xA;      categoryAxis.renderer.labels.template.marginLeft = 15; &#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.marginLeft = -40;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.renderer.labels.template.fontSize = 15;&#xD;&#xA;      categoryAxis.renderer.labels.template.fontWeight = 600;&#xD;&#xA;      &#xD;&#xA;      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); &#xD;&#xA;      valueAxis.min = 0;&#xD;&#xA;      valueAxis.rangeChangeEasing = am4core.ease.linear;&#xD;&#xA;      valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.23; &#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          valueAxis.extraMax = 0.1; &#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var poinSeries = chart.series.push(new am4charts.ColumnSeries());&#xD;&#xA;      poinSeries.dataFields.categoryY = &#34;short_name&#34;;&#xD;&#xA;      poinSeries.dataFields.valueX = &#34;poin&#34;;&#xD;&#xA;      poinSeries.tooltipText = &#34;{valueX.value}&#34;;&#xD;&#xA;      poinSeries.columns.template.strokeOpacity = 0;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusBottomRight = 5;&#xD;&#xA;      poinSeries.columns.template.column.cornerRadiusTopRight = 5;&#xD;&#xA;      poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;      poinSeries.interpolationEasing = am4core.ease.linear;&#xD;&#xA;      poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;      &#xD;&#xA;      var poinLabelBullet = poinSeries.bullets.push(&#xD;&#xA;        new am4charts.LabelBullet()&#xD;&#xA;      );&#xD;&#xA;      poinLabelBullet.label.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      poinLabelBullet.label.text = &#34;{valueX.formatNumber(&#39;#&#39;)}&#34;;&#xD;&#xA;      poinLabelBullet.label.textAlign = &#34;end&#34;;&#xD;&#xA;      poinLabelBullet.label.dx = -10;&#xD;&#xA;      poinLabelBullet.label.fill = am4core.color(&#34;#FFFFFF&#34;); &#xD;&#xA;      poinLabelBullet.label.fontSize = 25; &#xD;&#xA;&#xD;&#xA;      var poinImage = poinLabelBullet.createChild(am4core.Image); &#xD;&#xA;      poinImage.horizontalCenter = &#34;left&#34;;&#xD;&#xA;      poinImage.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      poinImage.propertyFields.href = &#34;logo&#34;;&#xD;&#xA;      poinImage.dx = 5;&#xD;&#xA;      poinImage.height = 60; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var labelMapping = {&#xD;&#xA;        BREN: {&#xD;&#xA;          color: &#34;#ffc200&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/15/AP_Bren_esports_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RORA: {&#xD;&#xA;          color: &#34;#00c9be&#34;, &#xD;&#xA;          logo: &#34;https://auroragg.com/s3/aurora-ams-web/8e07f9eea5bc7b23c49d5bd96b002ef0.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        BLCK: {&#xD;&#xA;          color: &#34;#000000&#34;, &#xD;&#xA;          logo: &#34;/Blacklist_Internationallogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        ONIC: {&#xD;&#xA;          color: &#34;#ffd000&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/1/1e/Onic-ph-logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        OMG: {&#xD;&#xA;          color: &#34;#00ad44&#34;, &#xD;&#xA;          logo: &#34;https://static.wikia.nocookie.net/cod_esports_gamepedia_en/images/a/a8/Omega_Esportslogo_square.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        RSG: {&#xD;&#xA;          color: &#34;#0078bb&#34;, &#xD;&#xA;          logo: &#34;https://upload.wikimedia.org/wikipedia/en/a/a4/RSG_PHILIPPINES_logo.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TNC: {&#xD;&#xA;          color: &#34;#f61e00&#34;, &#xD;&#xA;          logo: &#34;/TNC_Pro_Team.png&#34;,&#xD;&#xA;        },&#xD;&#xA;        TLPH: {&#xD;&#xA;          color: &#34;#001938&#34;, &#xD;&#xA;          logo: &#34;/Team_Liquid_Echo.png&#34;,&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;&#xD;&#xA;      function generateDrawLogo(color1, color2) {&#xD;&#xA;        return `&#xD;&#xA;          &lt;svg version=&#34;1.1&#34; id=&#34;Layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34;&#xD;&#xA;             viewBox=&#34;0 0 495 495&#34; style=&#34;enable-background:new 0 0 495 495;&#34; xml:space=&#34;preserve&#34;&gt;&#xD;&#xA;          &lt;g&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color1};&#34; d=&#34;M0,247.5C0,384.19,110.81,495,247.5,495V0C110.81,0,0,110.81,0,247.5z&#34;/&gt;&#xD;&#xA;            &lt;path style=&#34;fill:${color2}&#34; d=&#34;M247.5,0v495C384.19,495,495,384.19,495,247.5S384.19,0,247.5,0z&#34;/&gt;&#xD;&#xA;          &lt;/g&gt;&#xD;&#xA;          &lt;/svg&gt;`;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.columns.template.adapter.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;        return labelMapping[labelName]?.color || &#34;#333&#34;;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      poinImage.adapter.add(&#34;href&#34;, function (href, target) {&#xD;&#xA;        var labelName = target.dataItem.categoryY;&#xD;&#xA;&#xD;&#xA;        if (labelName === &#34;DRW&#34;) {&#xD;&#xA;          &#xD;&#xA;          var currentData = chart.data.find(&#xD;&#xA;            (item) =&gt; item.short_name === &#34;DRW&#34;&#xD;&#xA;          );&#xD;&#xA;          if (!currentData) return href;&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1 = currentData.clubs?.[0]; &#xD;&#xA;          var club2 = currentData.clubs?.[1]; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var club1Color = labelMapping[club1]?.color || &#34;#000000&#34;; &#xD;&#xA;          var club2Color = labelMapping[club2]?.color || &#34;#FFFFFF&#34;; &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgLogo = generateDrawLogo(club1Color, club2Color);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          var svgDataUrl =&#xD;&#xA;            &#34;data:image/svg+xml;charset=utf-8,&#34; + encodeURIComponent(svgLogo);&#xD;&#xA;&#xD;&#xA;          return svgDataUrl; &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        return labelMapping[labelName]?.logo || href;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinSeries.defaultState.transitionDuration = 0;&#xD;&#xA;      poinSeries.hiddenState.transitionDuration = 0;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.text = &#34;&#34;;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.opacity = 1;&#xD;&#xA;      poinSeries.columns.template.hiddenState.properties.visible = true;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.events.on(&#34;sizechanged&#34;, function (ev) {&#xD;&#xA;        if (ev.target.pixelWidth &lt;= 480) {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 5; &#xD;&#xA;          poinSeries.columns.template.height = 60; &#xD;&#xA;          poinLabelBullet.label.fontSize = 20; &#xD;&#xA;          poinImage.height = 55; &#xD;&#xA;          adjustZoomLevel(); &#xD;&#xA;          label.y = am4core.percent(93);&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          label.show();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        } else {&#xD;&#xA;          poinSeries.columns.template.maxWidth = 10; &#xD;&#xA;          poinImage.height = 60; &#xD;&#xA;          categoryAxis.zoom({ start: 0, end: 1 }); &#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;          label.show();&#xD;&#xA;          leagueLabel.hide();&#xD;&#xA;          scoreLabel.show();&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function adjustZoomLevel() {&#xD;&#xA;        var itemsWithNonZero = chart.data.filter(&#xD;&#xA;          (item) =&gt; item.poin &gt; 0&#xD;&#xA;        ).length;&#xD;&#xA;        categoryAxis.zoom({&#xD;&#xA;          start: 0,&#xD;&#xA;          end: itemsWithNonZero / categoryAxis.dataItems.length,&#xD;&#xA;        });&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      poinLabelBullet.label.adapter.add(&#34;text&#34;, function (text, target) {&#xD;&#xA;        return target.dataItem&#xD;&#xA;          ? Math.round(target.dataItem.valueX).toString()&#xD;&#xA;          : text;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var year = dateKeys[currentIndex]; &#xD;&#xA;      label.text = year;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;&#xD;&#xA;      var leagueLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      leagueLabel.x = am4core.percent(100);&#xD;&#xA;      leagueLabel.y = am4core.percent(91);&#xD;&#xA;      leagueLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      leagueLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      leagueLabel.dx = -0;&#xD;&#xA;      leagueLabel.fontSize = 20; &#xD;&#xA;      leagueLabel.dy = 10; &#xD;&#xA;      leagueLabel.opacity = 0.5; &#xD;&#xA;      leagueLabel.className = &#34;chart-label&#34;; &#xD;&#xA;&#xD;&#xA;      var scoreLabel = chart.plotContainer.createChild(am4core.Label); &#xD;&#xA;      scoreLabel.x = am4core.percent(100); &#xD;&#xA;      scoreLabel.y = am4core.percent(94);&#xD;&#xA;      scoreLabel.horizontalCenter = &#34;right&#34;;&#xD;&#xA;      scoreLabel.verticalCenter = &#34;middle&#34;;&#xD;&#xA;      scoreLabel.dx = -0;&#xD;&#xA;      scoreLabel.fontSize = 20; &#xD;&#xA;      scoreLabel.dy = 20; &#xD;&#xA;      scoreLabel.opacity = 0.5; &#xD;&#xA;      scoreLabel.className = &#34;chart-label&#34;; &#xD;&#xA;      scoreLabel.fontWeight = &#34;600&#34;; &#xD;&#xA;&#xD;&#xA;      var interval; &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function play() {&#xD;&#xA;        interval = setInterval(function () {&#xD;&#xA;          nextYear();&#xD;&#xA;        }, stepDuration);&#xD;&#xA;        nextYear();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function stop() {&#xD;&#xA;        if (interval) {&#xD;&#xA;          clearInterval(interval);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      function nextYear() {&#xD;&#xA;        currentIndex++;&#xD;&#xA;&#xD;&#xA;        if (currentIndex &gt;= dateKeys.length) {&#xD;&#xA;          clearInterval(interval); &#xD;&#xA;          console.log(&#34;Animation completed&#34;);&#xD;&#xA;          return;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var newData = allData[dateKeys[currentIndex]];&#xD;&#xA;        console.log(&#34;Updating to&#34;, dateKeys[currentIndex], newData); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        for (var i = 0; i &lt; chart.data.length; i++) {&#xD;&#xA;          if (&#xD;&#xA;            newData[i] &amp;&amp;&#xD;&#xA;            chart.data[i].short_name === newData[i].short_name&#xD;&#xA;          ) {&#xD;&#xA;            chart.data[i].poin = newData[i].poin;&#xD;&#xA;          } else {&#xD;&#xA;            console.warn(&#xD;&#xA;              &#34;Mismatch in team order at index&#34;,&#xD;&#xA;              i,&#xD;&#xA;              chart.data[i],&#xD;&#xA;              newData[i]&#xD;&#xA;            );&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        poinSeries.interpolationDuration = stepDuration;&#xD;&#xA;        valueAxis.rangeChangeDuration = stepDuration;&#xD;&#xA;&#xD;&#xA;        chart.invalidateRawData();&#xD;&#xA;        year = dateKeys[currentIndex];&#xD;&#xA;        label.text = year;&#xD;&#xA;&#xD;&#xA;        document.getElementById(&#34;yearDiv&#34;).innerText = year;&#xD;&#xA;        var leagues = newData.map((item) =&gt; item.league || &#34;&#34;).join(&#34; &#34;);&#xD;&#xA;        leagueLabel.text = leagues;&#xD;&#xA;        document.getElementById(&#34;leagueDiv&#34;).innerText = leagues;&#xD;&#xA;&#xD;&#xA;        var club1 = newData[0].short_name;&#xD;&#xA;        var club2 = newData[1].short_name;&#xD;&#xA;        var score1 = newData[0].score_komulatif;&#xD;&#xA;        var score2 = newData[1].score_komulatif;&#xD;&#xA;&#xD;&#xA;        if (score1 &lt; score2) {&#xD;&#xA;          [club1, club2] = [club2, club1];&#xD;&#xA;          [score1, score2] = [score2, score1];&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var scores = `&#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club1]?.color || &#34;#000&#34;};&#34;&gt;${club1}&lt;/span&gt; &#xD;&#xA;          ${score1}:${score2} &#xD;&#xA;          &lt;span style=&#34;color: ${labelMapping[club2]?.color || &#34;#000&#34;};&#34;&gt;${club2}&lt;/span&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        scoreLabel.html = scores; &#xD;&#xA;        document.getElementById(&#34;scoreDiv&#34;).innerHTML = scores; &#xD;&#xA;&#xD;&#xA;        adjustZoomLevel(); &#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        console.log(&#34;Year:&#34;, year);&#xD;&#xA;        console.log(&#34;Chart Data:&#34;, chart.data);&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      categoryAxis.sortBySeries = poinSeries;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.data = allData[dateKeys[0]].slice(0, 2).map((team) =&gt; ({&#xD;&#xA;        short_name: team.short_name,&#xD;&#xA;        poin: team.poin,&#xD;&#xA;        score: team.score,&#xD;&#xA;        league: allData[dateKeys[0]][2].league,&#xD;&#xA;        clubs: allData[dateKeys[0]][2].clubs,&#xD;&#xA;      }));&#xD;&#xA;      categoryAxis.zoom({ start: 0, end: 1 });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      console.log(&#34;Initial Chart Data:&#34;, chart.data);&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      chart.zoomOutButton.disabled = true;&#xD;&#xA;&#xD;&#xA;      poinSeries.events.on(&#34;inited&#34;, function () {&#xD;&#xA;        setTimeout(function () {&#xD;&#xA;          play(); &#xD;&#xA;        }, 2000);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      categoryAxis.events.on(&#34;datavalidated&#34;, function () {&#xD;&#xA;        adjustZoomLevel();&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      var staticText = chart.plotContainer.createChild(am4core.Label);&#xD;&#xA;      staticText.text = &#34;yt:SINAU&#34;;&#xD;&#xA;      staticText.fontSize = 18;&#xD;&#xA;      staticText.align = &#34;middle&#34;;&#xD;&#xA;      staticText.valign = &#34;middle&#34;;&#xD;&#xA;      staticText.opacity = 0.2; &#xD;&#xA;      staticText.dx = 10;&#xD;&#xA;      staticText.dy = 10;&#xD;&#xA;      staticText.fill = am4core.color(&#34;#000000&#34;); &#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;  })&#xD;&#xA;  .catch((error) =&gt; console.error(&#34;Error loading data:&#34;, error));&#xD;&#xA;&#xD;&#xA;&lt;/script&gt;</description>
    </item>
  </channel>
</rss>
